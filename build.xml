<project name="DörferPreset" default="default" basedir=".">
	<description>
		Ant Build File für das Preset für das APP Spiel im Sommersemester 2022.
	</description>
	
	<!-- global properties -->
	<property name="presetversion" value="1.0.0"/>

	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="resources" location="res"/>
	<property name="doc" location="doc"/>
	<property name="lib" location="lib"/>
	<property name="graphics" location="graphics"/>
	<property name="config" location="conf"/>
	
	<loadfile property="arg.value"
	    srcFile="${config}/default.txt"
	    failonerror="false"/>
	    
<loadfile property="argHuman.value"
	    srcFile="${config}/Arguments/allHuman.txt"
	    failonerror="false"/>
	
<loadfile property="argRandom.value"
	    srcFile="${config}/Arguments/allRandom.txt"
	    failonerror="false"/>
	
	
	<!-- classpath -->
	<path id="build.classpath">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>


	
	

	<target name="default" depends="init,build,doc,build-jar" description="the default behaviour" />


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by build -->
		<mkdir dir="${build}"/>
		<mkdir dir="${doc}"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="${dist}/lib"/>
		<mkdir dir="${dist}/graphics"/>
	</target>
	
	<target name="build" depends="init" description="compile the source">
		<!-- Compile the Java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpathref="build.classpath" includeantruntime="false">
			<compilerarg value="-Xlint:all"/>
		</javac>
		<!-- Include the graphics, as they are needed to be relative to the classes -->
		<copy todir="${build}/graphics">
			<fileset dir="${graphics}"/>
		</copy>
	</target>
	
	
	
  	<target name="build-jar" depends="build">
  	
  	        <copy todir="${dist}/graphics">
			<fileset dir="${graphics}"/>
		    </copy>
  			<copy todir="${dist}/lib">
			<fileset dir="${lib}"/>
		    </copy>
		    <copy todir="${dist}">
		    <fileset dir="${config}/exampleconfigs"/>
		    </copy>
		    
   		<jar destfile="${dist}/CMTsDoerfer.jar"
    		basedir="${build}">
    		<fileset dir="${graphics}"/>
    		<fileset dir="${lib}"/>
     		<manifest>
        		<attribute name = "Main-Class"
        		value = "doerfer.testing.BasicTestStarter"/>
        		<attribute name="Class-Path" value="lib/Doerfer-Preset-v1.3.1.jar lib/commons-cli-1.5.0.jar lib/svgSalamander-c281ca2.jar"/>
     		</manifest>

  		</jar>
	</target>

	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}/doerfer"/>
		<delete dir="${doc}"/>
		<delete dir="${dist}"/>
	</target>

    <target name="run" depends="build-jar">
    	<copy todir="${dist}">
		    <fileset dir="${config}/exampleconfigs"/>
		</copy>
        <java dir="./dist" jar="/${dist}/CMTsDoerfer.jar" fork="true">
          <arg line="${arg.value}"/>
        </java>
    </target>
    
    <target name="human" depends="build-jar">
        <copy todir="${dist}">
		    <fileset dir="${config}/exampleconfigs"/>
		</copy>
        <java dir="./dist" jar="/${dist}/CMTsDoerfer.jar" fork="true">
          <arg line="${argHuman.value}"/>
        </java>
    </target>
    
    <target name="random" depends="build-jar">
        <copy todir="${dist}">
		    <fileset dir="${config}/exampleconfigs"/>
		</copy>
        <java dir="./dist" jar="/${dist}/CMTsDoerfer.jar" fork="true">
          <arg line="${argRandom.value}"/>
        </java>
    </target>

	<target name="doc" depends="init" description="generate the distribution">
		<javadoc destdir="${doc}" author="true" version="true" use="true" private="true" sourcepath="${src}">
			<arg value="-Xdoclint:all"/>
			<classpath refid="build.classpath"/>
		</javadoc>
	</target>


</project>
